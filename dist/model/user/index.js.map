{"version":3,"sources":["../../../app/model/user/index.ts"],"names":["emailRegEx","userSchema","Schema","email","type","String","regex","username","__v","Number","select","MIN_LENGTH","PASSWORD_LENGTH_ERROR","passwordValidator","password","cb","trim","length","name","plugin","passportLocalMongoose","usernameField","mongoose","model"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;;;;;AAEA,IAAMA,UAAU,GACd,6IADF;AAGA,IAAMC,UAAU,GAAG,IAAIC,gBAAJ,CAAW;AAC1BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAEC,MADH;AAEHC,IAAAA,KAAK,EAAEN;AAFJ,GADmB;AAK1BO,EAAAA,QAAQ,EAAE;AACNH,IAAAA,IAAI,EAAEC;AADA,GALgB;AAQxBG,EAAAA,GAAG,EAAE;AAAEJ,IAAAA,IAAI,EAAEK,MAAR;AAAgBC,IAAAA,MAAM,EAAE;AAAxB;AARmB,CAAX,CAAnB;AAWO,IAAMC,UAAU,GAAG,CAAnB;;AACA,IAAMC,qBAAqB,GAAG,qBAA9B;;;AAEP,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD,EAAmBC,EAAnB,EAA+B;AACrD,MAAGD,QAAQ,CAACE,IAAT,GAAgBC,MAAhB,GAAyBN,UAA5B,EAAwC;AACpC,WAAOI,EAAE,CAAC;AACNG,MAAAA,IAAI,EAAEN,qBADA;AAENE,MAAAA,QAAQ,EAAE;AAFJ,KAAD,CAAT;AAIH;;AACD,SAAOC,EAAE,EAAT;AACH,CARD;;AAWAd,UAAU,CAACkB,MAAX,CAAkBC,iCAAlB,EAAyC;AACrCP,EAAAA,iBAAiB,EAAjBA,iBADqC;AAErCQ,EAAAA,aAAa,EAAE;AAFsB,CAAzC;AAaC;AAEqE;;eAEvDC,qBAASC,KAAT,CAAwC,MAAxC,EAAgDtB,UAAhD,C","sourcesContent":["import mongoose, {Schema, PassportLocalModel, PassportLocalDocument} from 'mongoose';\n\nimport passportLocalMongoose from 'passport-local-mongoose';\n\nconst emailRegEx =\n  '/^(([^<>()[]\\\\.,;:s@\"]+(.[^<>()[]\\\\.,;:s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}])|(([a-zA-Z-0-9]+.)+[a-zA-Z]{2,}))$/';\n\nconst userSchema = new Schema({\n    email: {\n        type: String,\n        regex: emailRegEx\n    }, \n    username: {\n        type: String\n    } ,\n      __v: { type: Number, select: false },\n});\n\nexport const MIN_LENGTH = 6;\nexport const PASSWORD_LENGTH_ERROR = 'PasswordLengthError';\n\nconst passwordValidator = (password: string, cb: any) => { \n    if(password.trim().length < MIN_LENGTH) {\n        return cb({\n            name: PASSWORD_LENGTH_ERROR,\n            password: \"Please password should have at least 6 characters\",\n        }) ;\n    }\n    return cb();\n}\n\n\nuserSchema.plugin(passportLocalMongoose, {\n    passwordValidator,\n    usernameField: 'email',\n});\n\nexport type User = {\n    email: string,\n    resetToken: string,\n};\n\nexport interface UserDocument extends User, PassportLocalDocument { \n    email: string,\n    resetToken: string,\n};\n\nexport interface UserModel extends PassportLocalModel<UserDocument> {};\n\nexport default mongoose.model<UserDocument, UserModel>('User', userSchema);\n\n\n"],"file":"index.js"}