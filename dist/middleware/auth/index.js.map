{"version":3,"sources":["../../../app/middleware/auth/index.ts"],"names":["require","config","logger","JWT_SECRET","process","env","console","log","AuthVerify","secret","algorithms","issuer","ISSUER","handleUnauthorizedError","err","_req","res","next","name","error","status","json","message"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;AAHAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAIA,IAAMC,MAAM,GAAG,wBAAY,iBAAZ,CAAf;AAGA,IAAMC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYF,UAA/B;;AAEA,IAAI,CAACA,UAAL,EAAiB;AACfG,EAAAA,OAAO,CAACC,GAAR,CAAY,wDAAZ;AACD;;AAEM,IAAMC,UAAU,GAAG,4BAAW;AACnCC,EAAAA,MAAM,EAAEN,UAAU,IAAI,EADa;AAEnCO,EAAAA,UAAU,EAAE,CAAC,OAAD,CAFuB;AAGnCC,EAAAA,MAAM,EAAEC;AAH2B,CAAX,CAAnB;;;AAOA,IAAMC,uBAAmC,GAAG,SAAtCA,uBAAsC,CAACC,GAAD,EAAMC,IAAN,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;AAC3E,MAAIH,GAAG,CAACI,IAAJ,KAAa,mBAAjB,EAAsC;AACpChB,IAAAA,MAAM,CAACiB,KAAP,CAAaL,GAAb;AACA,WAAOE,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,MAAAA,OAAO,EAAE;AADiB,KAArB,CAAP;AAGD;;AACDL,EAAAA,IAAI;AACL,CARM","sourcesContent":["require(\"dotenv\").config();\nimport expressJwt from \"express-jwt\";\nimport { ISSUER } from \"../../controller/auth\";\nimport setupLogger from \"../../config/logger\";\nconst logger = setupLogger(\"middleware/auth\");\nimport { Middleware } from \"Diwala\";\n\nconst JWT_SECRET = process.env.JWT_SECRET;\n\nif (!JWT_SECRET) {\n  console.log(\"[-] JWT_SECRET is no set. Auth wont function correctly\");\n}\n\nexport const AuthVerify = expressJwt({\n  secret: JWT_SECRET || \"\",\n  algorithms: [\"HS256\"],\n  issuer: ISSUER,\n});\n\n\nexport const handleUnauthorizedError: Middleware = (err, _req, res, next) => {\n  if (err.name === \"UnauthorizedError\") {\n    logger.error(err);\n    return res.status(401).json({\n      message: \"Invalid token\",\n    });\n  }\n  next();\n};\n"],"file":"index.js"}