{"version":3,"sources":["../../../app/controller/auth/index.js"],"names":["require","config","TOKEN_EXPIRATION","ISSUER","process","env","NODE_ENV","os","hostname","JWT_SECRET","passportAuthenticate","passport","authenticate","session","scope","generateAccessToken","req","res","next","token","jwt","sign","id","user","_id","username","expiresIn","algorithm","issuer","handleAuthSuccessResponse","returnedUser","toObject","salt","hash","__v","password","status","json","message","success","data","api","post","AuthVerify","logout","end"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AALAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAQO,IAAMC,gBAAgB,GAAG,KAAK,EAAL,GAAU,EAAV,GAAe,GAAxC,C,CAA6C;;;AAC7C,IAAMC,MAAM,GACjBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCC,eAAGC,QAAH,EAAxC,GAAwD,WADnD;;AAEA,IAAMC,UAAU,GAAGL,OAAO,CAACC,GAAR,CAAYI,UAA/B;;;AAEA,IAAMC,oBAAoB,GAAGC,qBAASC,YAAT,CAAsB,OAAtB,EAA+B;AAC/DC,EAAAA,OAAO,EAAE,KADsD;AAE/DC,EAAAA,KAAK,EAAE;AAFwD,CAA/B,CAA7B;;;;AAKE,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CACjCC,GADiC,EAEjCC,GAFiC,EAGjCC,IAHiC,EAI9B;AACH,MAAI,CAACF,GAAG,CAACG,KAAT,EAAgB;AACdH,IAAAA,GAAG,CAACG,KAAJ,GAAYC,yBAAIC,IAAJ,CAAS;AACnBC,MAAAA,EAAE,EAAEN,GAAG,CAACO,IAAJ,CAASC,GADM;AAEnBC,MAAAA,QAAQ,EAAET,GAAG,CAACO,IAAJ,CAASE;AAFA,KAAT,EAIVhB,UAJU,EAKV;AACEiB,MAAAA,SAAS,EAAExB,gBADb;AAEEyB,MAAAA,SAAS,EAAE,OAFb;AAGEC,MAAAA,MAAM,EAAEzB;AAHV,KALU,CAAZ;AAWD;;AACDe,EAAAA,IAAI;AACL,CAnBM;;;;AAsBA,IAAMW,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACb,GAAD,EAAMC,GAAN,EAAc;AACrD,MAAMa,YAAY,GAAGd,GAAG,CAACO,IAAJ,CAASQ,QAAT,EAArB;AAEA,SAAOD,YAAY,CAACE,IAApB;AACA,SAAOF,YAAY,CAACG,IAApB;AACA,SAAOH,YAAY,CAACI,GAApB;AACA,SAAOJ,YAAY,CAACK,QAApB;AAEA,SAAOlB,GAAG,CAACmB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,IAAAA,OAAO,EAAE,kCADiB;AAE1BC,IAAAA,OAAO,EAAE,IAFiB;AAG1BC,IAAAA,IAAI,EAAE;AACJrB,MAAAA,KAAK,EAAEH,GAAG,CAACG,KADP;AAEJI,MAAAA,IAAI,EAAEO;AAFF;AAHoB,GAArB,CAAP;AAQD,CAhBM;;;AAmBP,IAAIW,GAAG,GAAG,sBAAV;AAEFA,GAAG,CAACC,IAAJ,CAAS,GAAT,EACEhC,oBADF,EAEEK,mBAFF,EAGEc,yBAHF;AAMAY,GAAG,CAACC,IAAJ,CAAS,SAAT,EAAoBC,gBAApB,EAAgC,UAAC3B,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClDF,EAAAA,GAAG,CAAC4B,MAAJ;AACA,SAAO3B,GAAG,CAACmB,MAAJ,CAAW,GAAX,EAAgBS,GAAhB,EAAP;AACD,CAHD;eAKeJ,G","sourcesContent":["require(\"dotenv\").config();\nimport jwt from \"jsonwebtoken\";\nimport {Router, Request, Response, NextFunction} from \"express\";\nimport passport from \"passport\";\nimport os from \"os\";\nimport { AuthVerify } from \"../../middleware/auth\";\n\n\nexport const TOKEN_EXPIRATION = 60 * 60 * 24 * 365; //1 Year\nexport const ISSUER =\n  process.env.NODE_ENV === \"production\" ? os.hostname() : \"localhost\";\nexport const JWT_SECRET = process.env.JWT_SECRET;\n\nexport const passportAuthenticate = passport.authenticate(\"local\", {\n    session: false,\n    scope: [],\n  });\n\n  export const generateAccessToken = (\n    req,\n    res,\n    next\n  ) => {\n    if (!req.token) {\n      req.token = jwt.sign({\n        id: req.user._id,\n        username: req.user.username,\n      },\n        JWT_SECRET,\n        {\n          expiresIn: TOKEN_EXPIRATION,\n          algorithm: 'HS256',\n          issuer: ISSUER,\n        }\n      )\n    }\n    next();\n  };\n\n\n  export const handleAuthSuccessResponse = (req, res) => {\n    const returnedUser = req.user.toObject();\n  \n    delete returnedUser.salt;\n    delete returnedUser.hash;\n    delete returnedUser.__v;\n    delete returnedUser.password;\n  \n    return res.status(200).json({\n      message: \"User authenticated successfully.\",\n      success: true,\n      data: {\n        token: req.token,\n        user: returnedUser,\n      },\n    });\n  };\n\n\n  let api = Router();\n\napi.post(\"/\",\n  passportAuthenticate,\n  generateAccessToken,\n  handleAuthSuccessResponse\n);\n\napi.post(\"/logout\", AuthVerify, (req, res, next) => {\n  req.logout();\n  return res.status(200).end()\n});\n\nexport default api;"],"file":"index.js"}