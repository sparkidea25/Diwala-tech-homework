{"version":3,"sources":["../app/index.ts"],"names":["require","config","combine","winstonFormat","timestamp","colorize","printf","expressWinston","passport","LocalStrategy","Strategy","logger","app","use","express","json","transports","Console","format","info","message","meta","res","statusCode","responseTime","errorLogger","winston","initialize","session","usernameField","passwordField","User","authenticate","userRoute","pizzaRoute","orderRoute","port","process","env","PORT","listen"],"mappings":";;;;;;AACA;;AACA;;AACA;;AACA;;AAKA;;AACA;;AACA;;AACA;;;;;;AAZAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAKA,IAAQC,OAAR,GAAiDC,eAAjD,CAAQD,OAAR;AAAA,IAAiBE,SAAjB,GAAiDD,eAAjD,CAAiBC,SAAjB;AAAA,IAA4BC,QAA5B,GAAiDF,eAAjD,CAA4BE,QAA5B;AAAA,IAAsCC,MAAtC,GAAiDH,eAAjD,CAAsCG,MAAtC;;AACA,IAAMC,cAAc,GAAGP,OAAO,CAAC,iBAAD,CAA9B;;AACA,IAAMQ,QAAQ,GAAGR,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMS,aAAa,GAAGT,OAAO,CAAC,gBAAD,CAAP,CAA0BU,QAAhD;;AAKA,IAAMC,MAAM,GAAG,wBAAY,KAAZ,CAAf;AAGA,IAAMC,GAAgB,GAAG,0BAAzB;AAEAA,GAAG,CAACC,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQ,uBAAR;AAEAD,GAAG,CAACC,GAAJ,CACIN,cAAc,CAACI,MAAf,CAAsB;AACpBK,EAAAA,UAAU,EAAE,CAAC,IAAIA,oBAAWC,OAAf,EAAD,CADQ;AAEpBC,EAAAA,MAAM,EAAEhB,OAAO,CACbE,SAAS,EADI,EAEbC,QAAQ,EAFK,EAGbC,MAAM,CACJ,UAACa,IAAD;AAAA,qBACKA,IAAI,CAACf,SADV,cACuBe,IAAI,CAACC,OAD5B,cACuCD,IAAI,CAACE,IAAL,CAAUC,GAAV,CAAcC,UADrD,cACmEJ,IAAI,CAACE,IAAL,CAAUG,YAD7E;AAAA,GADI,CAHO;AAFK,CAAtB,CADJ;AAcEZ,GAAG,CAACC,GAAJ,CACEN,cAAc,CAACkB,WAAf,CAA2B;AACzBT,EAAAA,UAAU,EAAE,CAAC,IAAIU,oBAAQV,UAAR,CAAmBC,OAAvB,EAAD,CADa;AAEzBC,EAAAA,MAAM,EAAEf,gBAAcD,OAAd,CACNC,gBAAcE,QAAd,EADM,EAENF,gBAAcY,IAAd,EAFM;AAFiB,CAA3B,CADF;AAYFH,GAAG,CAACC,GAAJ,CAAQL,QAAQ,CAACmB,UAAT,EAAR;AACAf,GAAG,CAACC,GAAJ,CAAQL,QAAQ,CAACoB,OAAT,EAAR;AAGApB,QAAQ,CAACK,GAAT,CACI,IAAIJ,aAAJ,CACE;AACEoB,EAAAA,aAAa,EAAE,OADjB;AAEEC,EAAAA,aAAa,EAAE;AAFjB,CADF,EAKEC,iBAAKC,YAAL,EALF,CADJ;AAUEpB,GAAG,CAACC,GAAJ,CAAQ,KAAR,EAAeoB,iBAAf;AACArB,GAAG,CAACC,GAAJ,CAAQ,KAAR,EAAeqB,iBAAf;AACAtB,GAAG,CAACC,GAAJ,CAAQ,KAAR,EAAesB,iBAAf;AAGF,IAAIC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAA/B;AAGA3B,GAAG,CAAC4B,MAAJ,CAAWJ,IAAX,EAAiB,YAAM;AACnBzB,EAAAA,MAAM,CAACQ,IAAP,gDAA0CiB,IAA1C;AACH,CAFD","sourcesContent":["require(\"dotenv\").config();\nimport express,{Application} from 'express';\nimport cors from 'cors';\nimport winston, { format as winstonFormat, transports } from \"winston\";\nimport User from './model/user';\nconst { combine, timestamp, colorize, printf } = winstonFormat;\nconst expressWinston = require(\"express-winston\");\nconst passport = require('passport');\nconst LocalStrategy = require(\"passport-local\").Strategy;\nimport userRoute from './routes/user.router';\nimport pizzaRoute from './routes/pizza.router';\nimport orderRoute from './routes/order.router';\nimport setupLogger from './config/logger';\nconst logger = setupLogger('app');\n\n\nconst app: Application = express();\n\napp.use(express.json());\napp.use(cors());\n\napp.use(\n    expressWinston.logger({\n      transports: [new transports.Console()],\n      format: combine(\n        timestamp(),\n        colorize(),\n        printf(\n          (info: any) =>\n            `${info.timestamp} ${info.message} ${info.meta.res.statusCode} ${info.meta.responseTime}ms`\n        )\n      ),\n    })\n);\n\n  app.use(\n    expressWinston.errorLogger({\n      transports: [new winston.transports.Console()],\n      format: winstonFormat.combine(\n        winstonFormat.colorize(),\n        winstonFormat.json()\n      ),\n    })\n);\n\n\n\napp.use(passport.initialize());\napp.use(passport.session());\n\n\npassport.use(\n    new LocalStrategy(\n      {\n        usernameField: \"email\",\n        passwordField: \"password\",\n      },\n      User.authenticate()\n    )\n  );\n\n  app.use(\"/v1\", userRoute);\n  app.use(\"/v1\", pizzaRoute);\n  app.use(\"/v1\", orderRoute);\n\n\nlet port = process.env.PORT || 3000;\n\n\napp.listen(port, () => {\n    logger.info(`⚡️[Server] started on port ${port}`);\n})\n"],"file":"index.js"}